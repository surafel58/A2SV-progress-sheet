class Node:
    def __init__(self):
        self.val = None
        self.next = None

class MyLinkedList:

    def __init__(self):
        self.head = None
        self.length = 0

    def get(self, index: int) -> int:
        current = self.head

        if not current:
            return -1 
       
        for i in range(index):
            current = current.next
            if current == None:
                return -1

        return current.val

        

    def addAtHead(self, val: int) -> None:
        if not self.head:
            newNode = Node()
            newNode.val = val
            self.head = newNode
        else:
            temp = self.head
            newNode = Node()
            newNode.val = val
            self.head = newNode
            self.head.next = temp
                
        self.length += 1

    def addAtTail(self, val: int) -> None:
        if not self.head:
            newNode = Node()
            newNode.val = val
            self.head = newNode

        else:
            current = self.head
            while current.next:
                current = current.next
            
            newNode = Node()
            newNode.val = val
            current.next = newNode
        
        self.length += 1
            

    def addAtIndex(self, index: int, val: int) -> None:
        current = self.head
        temp = None
        
        if index == self.length:
            self.addAtTail(val)

        elif index < self.length:
            if index == 0:
                self.addAtHead(val)
            
            else:
                for i in range(index):
                    temp = current
                    current = current.next
                    if current == None:
                        return
                
                newNode = Node()
                newNode.val = val

                temp.next = newNode
                newNode.next = current

            self.length += 1


        

    def deleteAtIndex(self, index: int) -> None:
        current = self.head
        prev = None
        if not current or index >= self.length:
            return

        else:
            if(self.head.next == None):
                self.head = None
            else:
                if index == 0:
                    self.head = self.head.next

                else:
                    prev = self.head
                    current = self.head.next
                    for i in range(1,index):
                        prev = current
                        current = current.next
                    
                    prev.next = current.next
            self.length -= 1

            
    
        


# Your MyLinkedList object will be instantiated and called as such:
# obj = MyLinkedList()
# param_1 = obj.get(index)
# obj.addAtHead(val)
# obj.addAtTail(val)
# obj.addAtIndex(index,val)
# obj.deleteAtIndex(index)
